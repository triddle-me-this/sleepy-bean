package Shooter.weapons;


import java.awt.image.BufferedImage;

import core.console.Console;
import core.physics.Point;
import graphics.AdvancedGraphics;

public class HeroSword extends Weapon{

	final static int HOLD_DISTANCE = 10;
	final static int RECOIL_TIME = 40;
	final static int X_OFFSET = 1;
	final static int Y_OFFSET = -4;
	final static double ANG_OFFSET = -90;
	
	boolean swinging;
	boolean swingOut;
	
	public HeroSword(int x, int y) {
		super(x, y, Console.getImage("weapons/", "wep_heroSword.png"), HOLD_DISTANCE, 
				RECOIL_TIME, X_OFFSET, Y_OFFSET, ANG_OFFSET);
	}

	public void fire() {
		System.out.println("Swish!");
		swinging = true;
		swingOut = true;

		
	}
	
	public void weaponUpdate(){
		
		if (swinging){
			if (swingOut){
				swingOffset += .6*(180 -swingOffset);
				
				if (swingOffset >= 179){
					swingOffset = 180;
					swingOut = false;
				}
			}
			else{
				swingOffset -= 6;
				
				if (swingOffset <= 0){
					swingOffset = 0;
					swinging = false;
					swingOut = true;
				}
			}

		}
	}
	
	@Override
	public void draw(AdvancedGraphics pen) {
		
		Point drawPoint = getOffsetPoint();
		
		//flip the image for specific angles
		BufferedImage drawImage = image;
		if (getDrawAngle() > 90 && getDrawAngle() < 270){
			drawImage = (BufferedImage) pen.getMirroredImage(drawImage, false, true);
		}
		
		aimAngle = aimAngle - (aimAngle % 10);
		
		
		pen.drawRotatedImage(drawImage, new Point(drawPoint.getIntX(), drawPoint.getIntY()), (int)(getDrawAngle()));
		pen.drawRotatedImage(drawImage, new Point(drawPoint.getIntX(), drawPoint.getIntY()), (int)(getDrawAngle()-10));
		pen.drawRotatedImage(drawImage, new Point(drawPoint.getIntX(), drawPoint.getIntY()), (int)(getDrawAngle()-20));
		pen.drawRotatedImage(drawImage, new Point(drawPoint.getIntX(), drawPoint.getIntY()), (int)(getDrawAngle()-30));
		//debug: -----------------------
		//pen.setColor(Color.RED);
		//pen.drawRect(drawPoint.getIntX(), drawPoint.getIntY(), image.getWidth(), image.getWidth());
	}

}
